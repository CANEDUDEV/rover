name: CI

on:
  push:
    branches: ["main"]
  pull_request:

jobs:
  build-firmware:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4

      - name: Cache python venv
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('requirements.txt') }}

      - name: Cache meson subprojects
        uses: actions/cache@v4
        with:
          path: subprojects
          key: meson-${{ runner.os }}-${{ hashFiles('subprojects/*.wrap') }}-${{ hashFiles('subprojects/packagefiles/**') }}

      # Will run pip
      - name: Bootstrap build
        run: ./scripts/bootstrap.sh

      - name: Activate python venv
        run: |
          source .venv/bin/activate
          echo "$VIRTUAL_ENV/bin" >> $GITHUB_PATH
          echo "VIRTUAL_ENV=$VIRTUAL_ENV" >> $GITHUB_ENV

      - name: Build source
        run: meson compile -C build

      - name: Run tests
        run: meson test -v -C build

      - name: Check source
        run: meson compile -C build check

      - name: Build documentation
        run: meson compile -C build docs

  build-gateway:
    strategy:
      matrix:
        ros_distro: [humble, jazzy]

    runs-on: ubuntu-24.04

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - uses: actions/checkout@v4

      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Set up builder outside of script to use this action's built-in caching
      - uses: docker/setup-buildx-action@v3
        id: builder
        with:
          platforms: linux/amd64,linux/arm64

      - name: Build docker image
        run: ./scripts/build-ros-gateway.sh
        env:
          ROS_DISTRO: ${{ matrix.ROS_DISTRO }}
          PLATFORMS: ${{ steps.builder.outputs.platforms }}
          DOCKER_BUILDER: ${{ steps.builder.outputs.name }}
